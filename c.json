{
  "adapters": {
    "cpptools-remote": {
      "command": [
        "${gadgetDir}/vscode-cpptools/debugAdapters/OpenDebugAD7"
      ],
      "name": "cppdbg",
      "configuration": {
        "type": "cppdbg"
      }
    }
  },
  "configurations": {
    "C": {
      // Local C debugging
      "adapter": "vscode-cpptools",
      "configuration": {
        "request": "launch",
        "program": "${workspaceRoot}/${fileBasenameNoExtension}",
        "StopAtEntry": true,
        "MIMode": "gdb",
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    },

    "C Remote": {
      /* Remote C debugging
         This configuration it is assuming that you enter the remote machine and manually launch the debugger server:
         >> gdbserver --once --no-startup-with-shell  localhost:1679 ${BIN}
         Then start debugging from Vim

         Note:
         - 'miDebuggerServerAddress' makes the difference (configured -> connects to remote gdbserver, not-configured -> debugs local binary)
         - 'variables' section is explitly configured to prevent Vimspector to ask the user for them (feel free to 
           uncomment those lines
      */
      "variables": {
        "host": "localhost",
        "port": 1679
      },
      "adapter": "cpptools-remote",
      "configuration": {
        "request": "launch",
        "cwd": "${workspaceFolder}",
        "program": "${workspaceRoot}/${fileBasenameNoExtension}",
        "StopAtEntry": true,
        "MIMode": "gdb",
        "miDebuggerServerAddress": "${host}:${port}",
        // Don't know about this..it is just configured everywhere
        "setupCommands": [
          {
            "description": "Enable pretty-printing for gdb",
            "text": "-enable-pretty-printing",
            "ignoreFailures": true
          }
        ]
      }
    }
  }
}
